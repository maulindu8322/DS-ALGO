********* REVERSE X, AND DO LONGEST COMMON SUBSTRING OPERATION ************

#include<bits/stdc++.h>
#define ll long long int
using namespace std;
int main()
{
    string x;
    cout << "Enter x :" << endl;
    cin >> x;
    string y = x;
    reverse(x.begin(),x.end());
    vector<char> v;
    int m = x.size();
    int n = y.size();
    int f[m+1][n+1];
    int i,j;
    int maxlen = 0;
    int c;
    memset(f,0,sizeof(f));  // ********memset is very important tool, it makes all cell to 0***********
    for(i=1;i<=m;i++)
    {
        for(j=1;j<=n;j++)
        {
                if(x[i-1]==y[j-1])
                {
                    f[i][j] = f[i-1][j-1]+1;
                    if(f[i][j]>maxlen)
                    {
                        maxlen = f[i][j];
                        c = i;
                    }
                }
        }
    }

    cout << "Longest palindromic substring is : " << x.substr(c-maxlen,maxlen) << " which has lenth : " << maxlen << endl;
                    // *********string_name.substr(starting index, size) automatically gives the required substring directly;***************
    return 0;
}

